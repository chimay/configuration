" vim: set filetype=vim:

" Options {{{1

" t doit être inclus sinon <tab> ne marche pas
" pas besoin de placer s : ys / yS le remplace

set cpoptions=t

" ../ visible ?

set dotdirs=rootparent

" Important pour lancer les commandes externes

set shell=/bin/zsh

" This is the actual command used to start vi.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.

set vicmd=vim

" Mieux dans un terminal
"set vixcmd=gvim

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower and doesn't support progress measuring.

set syscalls

" Confirmation avant effacement définitif

set confirm=permdelete

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

set trashdir=~/racine/trash/vifm,%r/.vifm-Trash

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun

" Tri

set sort=+dir,+ext,+name,-mtime

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Vue en 3

set milleroptions="lsize:1,csize:1,rsize:1,rpreview:all"

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)

set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do too many requests to slow file systems

" if !has('win')
"     set slowfs=curlftpfs
" endif

" Various customization examples

" Use ag (the silver searcher) instead of grep
"
" set grepprg=ag\ --line-numbers\ %i\ %a\ %s

set grepprg="rg --vimgrep --smart-case %i %a %s"

"set findprg="find %s -name \\*%p\\* -print , -type d \\( ! -readable -o ! -executable -o -path './.*' \\) -prune"

set findprg="ag --nocolor -g %p"

set locateprg="locate -d ~/racine/index/locate/racine.db %a"

set fusehome="~/racine/filesys/fuse"

" }}}1

" Environnement {{{1

" La variable est ajustée mais pas prise en compte
"let $LESS="--ignore-case"

" Add additional place to look for executables
"
" let $PATH=$HOME.'/bin/fuse:'.$PATH

" }}}1

" Historique {{{1

" This is how many directories to store in the directory history.

set history=300

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi

set vifminfo=
			\bmarks,
			\bookmarks,
			\cs,
			\chistory,
			\dhistory,
			\dirstack,
			\fhistory,
			\phistory,
			\registers,
			\savedirs,
			\shistory,
			\state,
			\tui

" }}}1

" Signets {{{1

" :mark mark /full/directory/path [filename]

mark 0 ~/racine/plain
mark 1 ~/racine/site/orgmode
mark 2 ~/racine/public
mark 9 ~/racine/archive

mark r ~/racine

mark a ~/racine/automat
mark c ~/racine/config
mark f ~/racine/fun
mark i ~/racine/infoman
mark l ~/racine/liber
mark m ~/racine/mail
mark n ~/racine/network
mark p ~/racine/pictura
mark s ~/racine/shell

mark P ~/racine/papier

mark A ~/audio

mark w ~/graphix/wallpaper

mark D ~/Documents
mark T ~/Téléchargements

" }}}1

" Types de fichiers {{{1

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf

filextype *.pdf zathura %c %i &, apvlv %c, xpdf %c

filextype *.epub zathura %c %i &, apvlv %c, xpdf %c

" PostScript

filextype *.ps,*.eps,*.ps.gz
        \ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" Djvu

filextype *.djvu
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Audio

filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
       \ {Play using mpv}
       \ mpv %f,
       \ {Play using ffplay}
       \ ffplay -nodisp %c,
       \ {Play using MPlayer}
       \ mplayer %f,

" Video

filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
        \ {Play using mpv}
        \ mpv %f,
        \ {View using ffplay}
        \ ffplay -fs %f,
        \ {View using Dragon}
        \ dragon %f:p,
        \ {View using mplayer}
        \ mplayer %f,

" Web

filextype *.html,*.htm
        \ {Open with dwb}
        \ dwb %f %i &,
        \ {Open with qutebrowser}
        \ qutebrowser %f &,
        \ {Open with uzbl}
        \ uzbl-browser %f %i &,
filetype *.html,*.htm links, lynx

" Object

filetype *.o nm %f | less

" Man page

filetype *.[1-8] man ./%c

" Images

filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ {View in sxiv}
        \ sxiv %f,
        \ {View in vimiv}
        \ vimiv %f,
        \ {View in gpicview}
        \ gpicview %c,
        \ {View in shotwell}
        \ shotwell,

filextype *.svg vimiv %f

" OpenRaster

filextype *.ora
        \ {Edit in MyPaint}
        \ mypaint %f,

" Mindmap

filextype *.vym
        \ {Open with VYM}
        \ vym %f &,

" MD5

filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1

filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256

filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512

filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature

filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent

filetype *.torrent ktorrent %f &

" FuseZipMount

filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ tar -xf %c,

" ArchiveMount

filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,

" Rar2FsMount and rar archives

filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,

" IsoMount

filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount

filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount

filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives

filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,

" Office files

filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &

" TuDu files

filetype *.tudu tudu -f %c

" Qt projects

filextype *.pro qtcreator %f &

" Directories

filextype */
        \ {View in thunar}
        \ Thunar %f &,

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" Viewers {{{2

" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
" fileviewer *.jpg,*.png shellpic %c

fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c

fileviewer *.rar unrar v %c

fileviewer *.7z 7z l %c

fileviewer *.doc catdoc %c
fileviewer *.docx, docx2txt.pl %f -

fileviewer *.ogg ogginfo
fileviewer *.mp3 mp3info
fileviewer *.flac soxi

fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]
         \ ffprobe -pretty %c 2>&1

fileviewer *.[1-8] man ./%c | col -b

fileviewer *.torrent dumptorrent -v %c

" Voir Vifmimg

" fileviewer *.pdf pdftotext -nopgbrk %c -

" fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
"          \ convert -identify %f -verbose /dev/null

" Vifmimg

fileviewer *.pdf
	\ vifmimg pdfpreview %px %py %pw %ph %c
	\ %pc
	\ vifmimg clear

fileviewer *.epub
	\ vifmimg epubpreview %px %py %pw %ph %c
	\ %pc
	\ vifmimg clear

fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
	\*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
	\ vifmimg videopreview %px %py %pw %ph %c
	\ %pc
	\ vifmimg clear

fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.xpm
	\ vifmimg draw %px %py %pw %ph %c
	\ %pc
	\ vifmimg clear

fileviewer *.gif
	\ vifmimg gifpreview %px %py %pw %ph %c
	\ %pc
	\ vifmimg clear

fileviewer *.ico
	\ vifmimg magickpreview %px %py %pw %ph %c
	\ %pc
	\ vifmimg clear

" }}}2

" }}}1

" Thème {{{1

colorscheme ornuit

set fillchars=vborder:|

set timefmt="%H:%M %d-%m-%y"

set statusline="  %t %T %A %E / %a %u:%g %D %z"

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
set viewcolumns=*40%{name}.,25%{mtime}.,25%{perms}.,10%{size}.

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

filter! /^.*\.(git|hg|bzr|o|py[co])$|.*~$/

" }}}1

" Commandes {{{1

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

" command! df df -h %m 2> /dev/null
" command! zip zip -r %f.zip %f
" command! run !! ./%f
" command! make !!make %a
" command! mkcd :mkdir %a | cd %a
" command! vgrep vim "+grep %a"
" command! reload :write | restart

"command! h help

command! vimdiff vimdiff %f %F
command! link ln -s %d/%f %D

" }}}1

" Mappings {{{1

" Concept
"
" Left ou h : répertoire parent
" Down ou j : fichier suivant
" Up ou j : fichier précédent
" Right ou l : on entre dans le répertoire, ou on visualise le fichier

" Disponibles
"
" % |

" Aide {{{2

nnoremap <m-a> :apropos<space>

" }}}2

" Recharger {{{2

" Open editor to edit vifmrc and apply settings after returning to vifm

nnoremap @ :write | edit $MYVIFMRC | restart<cr>

" }}}2

" Quitter {{{2

nnoremap ZZ :qa<cr>
nnoremap ZQ :qa!<cr>

" }}}2

" Présentation {{{2

nnoremap § :tree!<cr>

nnoremap <C-w>0 <C-w>o
nnoremap <C-w>1 <C-w>s
nnoremap <C-w>2 <C-w>v

nnoremap <C-w>3 :set millerview!<cr>
nnoremap <C-w>4 :set lsview!<cr>

nnoremap <F9> :split!<cr>
nnoremap <F10> :vsplit!<cr>

nnoremap <F11> :set millerview!<cr>
nnoremap <F12> :set lsview!<cr>

" }}}2

" Onglets {{{2

nnoremap <m-t> :tabnew<cr>
nnoremap J gt
nnoremap K gT

" }}}2

" Déplacement {{{2

nnoremap <PageUp> <C-B>
nnoremap <PageDown> <C-F>

" }}}2

" Sélectionner {{{2

nnoremap <space> :select<space>

" }}}2

" Signets {{{2

nnoremap <m-b> :bmarks<space>
nnoremap <m-m> :marks<cr>

" }}}2

" Recherche {{{2

"nnoremap * :find **

nnoremap * :find<space>

nnoremap é :filter<space>

nnoremap è :grep<space>

nnoremap ° :locate<space>

" }}}2

" Tri {{{2

" Display sorting dialog

nnoremap o :sort<cr>

nnoremap O :invert o<cr>

" }}}2

" Filtres {{{2

" Fichiers cachés

nnoremap zh za

" }}}2

" Visualiser & Éditer {{{2

nnoremap µ :view<cr>
vnoremap µ :view<cr>gv

nnoremap % <s-tab>
nnoremap <C-^> <s-tab>

qnoremap % <s-tab>
qnoremap q <s-tab>
qnoremap <C-^> <s-tab>

nnoremap £ :!LESS= less %f<cr>

nnoremap <m-e> :edit<cr>

" Toggle visibility of preview window

" Open file in the background using its default program

nnoremap <m-o> :file &<cr>

" }}}2

" Répertoires {{{2

nnoremap ù :history d<cr>
nnoremap qd :history d<cr>

nnoremap H :histprev<cr>
nnoremap L :histnext<cr>

nnoremap gj :siblnext!<cr>
nnoremap gk :siblprev!<cr>

nnoremap <m-y> :sync! all<cr>

" Navigation synchronisée relative

nnoremap $ :windo cd<space>

" }}}2

" Menus & Dialogs {{{2

" Create virtual folder

mnoremap f b

" Quick fix dans vim

"mnoremap <m-v> v

" }}}2

" Renommer {{{2

nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

nnoremap cv :rename<cr>
nnoremap cr :rename!<cr>

" }}}2

" Copier, Coller, Supprimer {{{2

" Copier & Déplacer

" Voir aussi :copy et :move

nnoremap àà :!cp %f %D<cr>
nnoremap àm :!mv %f %D<cr>

" Sync with Rsync

nnoremap àf :!rsync -av %f %D<cr>
nnoremap àd :!rsync -av %d/ %D<cr>

" Copier & Coller

nnoremap àc :clone<cr>

" Corbeille vifm

" dd : envoie vers corbeille vifm
"
" restauration :
"   * r dans :lstrash
"   * yy les fichiers dans la corbeille et p dans le
"                répertoire de destination

nnoremap <lt> :lstrash<cr>
nnoremap <m-q> :lstrash<cr>
nnoremap <c-q> :trashes?<cr>

" Corbeille générale

nnoremap <delete> :!trash-put %f<cr>
nnoremap dr :!trash-restore <cr>

" Nom du chemin, fichier, répertoire -> clipboard

map çç :!echo -n %d/%f | xsel -i; xsel -o | xsel -i -b<cr>
map çf :!echo -n %f    | xsel -i; xsel -o | xsel -i -b<cr>
map çd :!echo -n %d    | xsel -i; xsel -o | xsel -i -b<cr>

" }}}2

" Autres opérations sur fichiers {{{2

" Ouverture
nnoremap <m-f> :f<cr>

nnoremap <m-d> :mkdir!<space>

nnoremap <m-n> :!touch %f<cr>

nnoremap <m-p> :!apack %c.txz %c<cr>

" Vimdiff

nnoremap ,2 :vimdiff<cr>

" Symlink

nnoremap ,l :link<cr>

" Medias amovibles

nnoremap ,m :media<cr>

" Papier peint

nnoremap ,w :!feh --bg-max --no-fehbg %f<cr>

" }}}2

" Contrôle de version {{{2

" VCS repository

nnoremap <m-r> :!tig<cr>

" Upload

nnoremap <m-u> :!git push origin master<cr>

" }}}2

" Shell {{{2

"nnoremap <m-s> :shell<cr>
"nnoremap <m-s> :!bash<cr>
nnoremap <m-s> :!fish<cr>

nnoremap <m-j> :jobs<cr>

" }}}2

" }}}1
