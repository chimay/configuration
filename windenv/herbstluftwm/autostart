#!/usr/bin/env zsh

# this is a simple config for herbstluftwm

# path {{{1

source ~/racine/config/cmdline/zsh/zprofile

# alias {{{1

hc() {
    herbstclient "$@"
}

# lock {{{1

hc lock

# hook {{{1

hc emit_hook reload

#xsetroot -solid '#5A8E3A'

# tags, aka desktops aka workspaces {{{1

echo tags names
echo

tag_names=(term view edit system browser office artisan video game)

hc rename default $tag_names[1] || true

for index in {2..9}
do
    hc add $tag_names[$index]
done

# keybindings {{{1

echo keybindings
echo

# unbind {{{2

# remove all existing keybindings

hc keyunbind --all

# modifiers {{{2

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
#Mod=Mod4   # Use the super key as the main modifier

super=Mod4   # Use the super key as the main modifier
hyper=Mod3   # Use the super key as the main modifier

# self {{{2

#hc keybind $hyper-Shift-q quit
#hc keybind $super-Shift-q quit

hc keybind $hyper-r reload
hc keybind $hyper-Shift-e wmexec

# focus {{{2

hc keybind $super-Left  focus left
hc keybind $super-Down  focus down
hc keybind $super-Up    focus up
hc keybind $super-Right focus right

# if more than one window in current frame, cycle them
# else, go to previous workspace aka tag

hc keybind $super-Tab                                           \
            or , and . compare tags.focus.curframe_wcount ge 2  \
                     . cycle +1                                 \
               , use_previous

hc keybind $super-BackSpace                                     \
            or , and . compare tags.focus.curframe_wcount ge 2  \
                     . cycle -1                                 \
               , use_previous

hc keybind $hyper-asciicircum use_previous

# hc keybind $super-Tab cycle +1
# hc keybind $super-BackSpace cycle -1

#hc keybind $super-Tab         cycle_all +1
#hc keybind $super-Shift-Tab   cycle_all -1

#hc keybind $super-c cycle
#hc keybind $super-i jumpto urgent

# movement {{{2

# moving clients in tiling and floating mode

# with the option focus_crosses_monitor_boundaries,
# can also move the window to another monitor

hc keybind $hyper-Left  shift left
hc keybind $hyper-Down  shift down
hc keybind $hyper-Up    shift up
hc keybind $hyper-Right shift right

hc keybind $super-Shift-Left  shift_edge left
hc keybind $super-Shift-Down  shift_edge down
hc keybind $super-Shift-Up    shift_edge up
hc keybind $super-Shift-Right shift_edge right

hc keybind $super-Next spawn hlwm-swap.bash down
hc keybind $super-Prior spawn hlwm-swap.bash up

# frames {{{2

# create an empty frame at the specified direction

hc keybind $hyper-v       split   bottom  0.618
hc keybind $hyper-h       split   right   0.618

# remove current frame

hc keybind $hyper-Delete remove

# let the current frame explode into subframes

hc keybind $super-Control-space split explode

# resizing frames and floating clients

resizestep=0.02

hc keybind $super-Control-Left    resize left +$resizestep
hc keybind $super-Control-Down    resize down +$resizestep
hc keybind $super-Control-Up      resize up +$resizestep
hc keybind $super-Control-Right   resize right +$resizestep

# layouting {{{2

# see also
# <url:~/racine/config/windenv/sxhkd/hlwm-sxhkdrc#tn=herbstclient set_layout>

#hc keybind $hyper-l cycle_layout +1 horizontal vertical grid max

# toggle grid <-> max = tabbed layout
# max layout displaye windows as tabs when window titles height is > 0

# hc keybind $hyper-Tab                                                           \
#             or , and . compare tags.focus.tiling.focused_frame.algorithm = max  \
#                      . chain - set_layout grid - attr theme.title_height 0      \
#                , chain - set_layout max - attr theme.title_height 17

# title is not necessary
hc keybind $hyper-Tab                                                           \
            or , and . compare tags.focus.tiling.focused_frame.algorithm = max  \
                     . chain - set_layout grid                                  \
               , chain - set_layout max

hc keybind $hyper-i                                                             \
            or , and . compare tags.focus.tiling.focused_frame.algorithm = max  \
                     . chain - set_layout grid - attr theme.title_height 0      \
               , chain - set_layout max - attr theme.title_height 17

# toggle maximize over all the frames of the monitor, but don't overlap the panel(s)
hc keybind $hyper-m spawn hlwm-maximize.sh
# complete fullscreen
hc keybind $hyper-z fullscreen toggle

hc keybind $hyper-f floating toggle
#hc keybind $super-Shift-f set_attr clients.focus.floating toggle

hc keybind $hyper-ugrave set_attr clients.focus.minimized true
hc keybind $hyper-mu jumpto last-minimized

hc keybind $super-Control-BackSpace set_attr clients.focus.minimized true
hc keybind $super-Control-Tab jumpto last-minimized

hc keybind $hyper-p pseudotile toggle

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.

# hc keybind $hyper-Shift-l                                                       \
#             or , and . compare tags.focus.curframe_wcount = 2                   \
#                      . cycle_layout +1 vertical horizontal max vertical grid    \
#                , cycle_layout +1

# windows {{{2

# close window
hc keybind $hyper-Shift-x close

# close window and remove frame
hc keybind $hyper-BackSpace close_and_remove

# tags, aka desktops aka workspaces {{{2

hc keybind $hyper-Prior use_index -1 --skip-visible
hc keybind $hyper-Next use_index +1 --skip-visible

for index in {1..9}
do
	key=F$index
	(( workspace = index - 1 ))
	hc keybind $super-$key use_index $workspace
	hc keybind $super-Shift-$key move_index $workspace
done

#tag_names=( {1..9} )
#tag_keys=( {1..9} 0 )

#hc rename default "${tag_names[0]}" || true
#for i in "${!tag_names[@]}" ; do
    #hc add "${tag_names[$i]}"
    #key="${tag_keys[$i]}"
    #if [ -n "$key" ] ; then
        #hc keybind "$super-$key" use_index "$i"
        #hc keybind "$super-Shift-$key" move_index "$i"
    #fi
#done

# monitors {{{2

# -- to move a window to another monitor,
# -- see the movement keybindings
#hc keybind $hyper-Left chain , shift_to_monitor -l , focus_monitor -l
#hc keybind $hyper-Right chain , shift_to_monitor -r , focus_monitor -r

hc keybind $super-End focus_monitor -1
hc keybind $super-Home focus_monitor +1

#hc keybind $super-Shift-Left focus_monitor -l
#hc keybind $super-Shift-Right focus_monitor -r

#hc keybind $super-BackSpace   cycle_monitor

# scratchpad {{{2

hc keybind Shift-F12 spawn hlwm-scratchpad.sh

# does not work : no sticky attr

# for key in F9 F10 F11 F12
# do
# 	hc keybind $super-$key spawn shvmsaini-add_scratchpad.sh $key "Add"
# 	hc keybind $super-Shift-$key spawn shvmsaini-add_scratchpad.sh $key "Remove"
# done

# applications {{{2

#hc keybind $super-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback

hc keybind $hyper-Return spawn xterm -ls zsh
hc keybind $hyper-exclam spawn urxvtc -name shell -e zsh -l
hc keybind $hyper-dollar spawn kitty
hc keybind $hyper-a spawn alacritty

# theme {{{2

hc keybind $hyper-t                                          \
            or , and . compare theme.title_height = 0        \
                     . attr theme.title_height 17            \
               , attr theme.title_height 0

hc keybind $hyper-d set_attr clients.focus.decorated toggle

# mouse bindings {{{1

echo mouse bindings
echo

hc mouseunbind --all

hc mousebind $super-Button1 move
hc mousebind $super-Button2 zoom
hc mousebind $super-Button3 resize

# options {{{1

echo options
echo

# layout {{{2

hc set tabbed_max true

# monitors {{{2

hc set auto_detect_monitors true
hc set focus_crosses_monitor_boundaries true

# windows {{{2

hc set focus_follows_mouse true

# miscellaneous {{{2

hc set tree_style '╾│ ├└╼─┐'

# theme {{{1

echo theme
echo

hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc set frame_gap 7
hc set show_frame_decorations 'focused_if_multiple'
hc set frame_border_width 1
hc set frame_bg_transparent on
hc set frame_transparent_width 5
hc set frame_padding 0
hc set smart_frame_surroundings on

hc set window_gap 0
hc set mouse_recenter_gap 0
hc set smart_window_surroundings off

hc attr theme.inner_width 1
hc attr theme.border_width 7
hc attr theme.tiling.outer_width 1
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1

hc attr theme.active.tab_title_color '#000000'
hc attr theme.active.tab_color '#000000'
hc attr theme.tab_title_color '#9b3c11'
hc attr theme.tab_color '#000000'

hc attr theme.inner_color '#5b3c11'
hc attr theme.outer_color '#5b3c11'
hc attr theme.background_color '#5b3c11'

hc attr theme.normal.inner_color '#5b3c11'
hc attr theme.active.inner_color '#5b3c11'
hc attr theme.urgent.inner_color '#972e30'

hc set frame_border_active_color '#5b3c11'
hc set frame_bg_active_color '#000000'
hc set frame_border_normal_color '#5b3c11'
hc set frame_bg_normal_color '#000000'

# alias for theme.active.color
#hc set window_border_active_color '#9b3c11cc'
# alias for theme.normal.color
#hc set window_border_normal_color '#5b3c11cc'

hc attr theme.normal.color '#000000'
hc attr theme.active.color '#5b3c11'
hc attr theme.urgent.color '#872e30'

hc attr theme.title_align center
hc attr theme.normal.title_color '#9b3c11'
hc attr theme.active.title_color '#000000'
hc attr theme.title_height 0
hc attr theme.title_depth 0
hc attr theme.title_when always
hc attr theme.active.title_font 'Dejavu Sans:pixelsize=15 Bold'
hc attr theme.title_font 'Dejavu Sans:pixelsize=15 Bold'
#hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.title_depth 3  # space below the title's baseline

hc attr theme.active.tab_outer_color '#5b3c11dd'

hc attr theme.floating.outer_color black

# copy inner color to outer_color

for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done

# rules {{{1

echo rules
echo

# unrule all {{{2

hc unrule -F

# focus {{{2

# normally focus new clients
hc rule focus=on

# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
#hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on

# desktops {{{2

#hc rule class=XTerm tag=term # move all xterms to tag 3

hc rule class=Zathura tag=view
hc rule class=Apvlv tag=view
hc rule class=feh tag=view
hc rule class=Sxiv tag=view
hc rule class=vimiv tag=view

hc rule class=nvim-qt tag=edit
hc rule class=Emacs tag=edit

hc rule class=TradingView tag=system

hc rule class=qutebrowser tag=browser
hc rule class=firefox tag=browser

hc rule class=libreoffice-startcenter tag=office

hc rule class=frescobaldi tag=artisan

hc rule class=vlc tag=video
hc rule class=FreeTube tag=video

hc rule class=wesnoth tag=game

# floating {{{2

hc rule fixedsize floating=on
hc rule floatplacement=center

hc rule instance=zshrun class=URxvt floating=on floatplacement=center
hc rule instance=zshrunterm class=URxvt floating=on floatplacement=center
hc rule instance=fzf-nova class=URxvt floating=on floatplacement=center
hc rule instance=calculatrice class=URxvt floating=on floatplacement=center
hc rule instance=meteo class=URxvt floating=on floatplacement=center
hc rule instance=journal class=URxvt floating=on floatplacement=center
hc rule instance=maintenance class=URxvt floating=on floatplacement=center
hc rule instance=multimedia class=URxvt floating=on floatplacement=center

hc rule class=QjackCtl floating=on floatplacement=center

hc rule class=zenity floating=on floatplacement=center
hc rule class=pavucontrol floating=on floatplacement=center
hc rule class=pavucontrol-qt floating=on floatplacement=center
hc rule class=Xfce4-appfinder floating=on floatplacement=center
hc rule class=Pamac-manager floating=on floatplacement=center
hc rule class="Manjaro Settings Manager" floating=on floatplacement=center
hc rule class=Asunder floating=on floatplacement=center
hc rule class=Element floating=on floatplacement=center

hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on

# dropdown {{{2

hc rule instance=kitty-dropdown floating=on floatplacement=center
hc rule instance=urxvt-dropdown floating=on floatplacement=center
hc rule instance=calc-dropdown floating=on floatplacement=center

# unmanaged {{{2

hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# monitors {{{1

echo monitors
echo

# do multi monitor setup here, e.g.:

#hc set_monitors 1280x1024+0+0 1280x1024+1280+0

# or simply:

hc detect_monitors

# unlock {{{1

hc unlock

# panels {{{1

echo panels
echo

# polybar {{{2

# must be launched before services that need system tray

#hc spawn hlwm-polybar.zsh

hlwm-polybar.zsh

# dzen2 {{{2

# # find the panel
# panel=~/.config/herbstluftwm/panel.sh
# [ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
# for monitor in $(hc list_monitors | cut -d: -f1) ; do
#     # start it on each monitor
#     "$panel" "$monitor" &
# done

# autostart applications {{{1

# in cas of restart, we need to stop some processes first

echo autostop
echo

hlwm-autostop.zsh >>! ~/log/autostop.log 2>&1

echo sleep 5
echo

sleep 5

echo autostart
echo

hlwm-autostart.zsh >>! ~/log/autostart.log 2>&1
