
#+STARTUP: showall

* Configuration files

A coherent set of configuration files for my favorite apps.


* Keybindings

The keybindings are essentially vim, less or emacs like, depending on
the context. For example :

  - Vim

    + Neomutt index

  - Less

    + Elinks

    + W3m

    + Neomutt pager

    + Newsboat

  - Emacs

    + Zsh

    + Elinks edit mode


** Prefix & Modes

Some applications :

  - Can use an independant keymap introduced by a prefix key

    + tmux

  - Can use independant keymap modes

    + i3, tmux, emacs, vim


** Allocation


*** Window Manager

The following keys are reserved for Window Manager (i3) :

  - Hyper (Mod3, I bind it to the Menu key) with any key(s)

  - Super (Mod4) with

    + Arrows

    + Page Up / Down

    + Home / End

    + Tab, Backspace

    + F1 .. F12

  - Super (Mod4) with any modifier(s) and same keys as above

  - Super with Control and

    + Any key(s)

  - Prefix chosen among the previous keys

  - Sub mode entered with one or more of the previous keys


*** Applications

The following keys are reserved for applications :

  - Super with all other keys

    + Letters

    + Digits

    + Insert, Delete, Return

    + & @ ^ $ ! ( ) [ ] { } ...

  - Super with Shift and same keys as above

  - Prefix chosen among the previous keys

  - Sub mode entered with one or more of the previous keys


** Coherence

To be as intuitive as possible, some conventions are applied :

  - Move focus between desktops :

    + Hyper + page up / down

  - Move focus between X windows :

    + Super + arrows

    + Super + page up / down, prior / next

  - Move focus between tmux panes & vim :

    + Shift + arrows

    + Also in emacs, but not in org files (org-shift<arrows>)

  - In buffer oriented applications, move focus between buffers :

    + Ctrl + page up / down

  - In tab oriented applications, move focus between tabs :

    + Ctrl + page up / down

    + In pager context : ^ and $

  - In buffers & tabs oriented applications like vim with ctrlspace or
    emacs with mtorus :

    + Change buffer : Ctrl + page up / down

    + Change tab, or ring : Ctrl + home / end

    + Buffer / Tab (ring) manager : Super (Control) + space

  - Move in history

    + In pager context

      * Backspace = back

      * H = back

      * L = forward

    + In REPL context

      * Up, M-p  = back, with typed text as filter

      * Down, M-n = forward, with typed text as filter


* Features

Comparison of window managers


** I3 WM

Why i3 ?

  - Tiling, Tabbed, Staking and floating modes

    + Tiling means all screen space is available for apps

    + Good support for floating window, so you can use it as an hybrid
       WM if you want

  - Dynamic workspaces

  - Support of Super and Hyper keys in bindings

  - You can define keybinding modes

  - Automatic properties of windows : workspace, floating, size, ...

  - Scriptable via i3-msg

  - You can add rofi scripts, or any script to the panel (called bar)
    via i3block ; see also i3status for information

  - Multi monitors support


** BSPWM

Why BSP?

  - Tiling, fullscreen and floating modes

  - Keybindings

    + Managed by sxhkd

    + Support of Super and Hyper keys

    + Keybinding chains

  - Panels (bars) : polybar

    + Custom scripts

    + IPC

    + Good choice of internal modules

    + Menu

  - Scriptable via bspc

  - Automatic properties of windows : workspace, floating, ...

  - Multi monitors support


* Warning

I try to be mindful when I code, but some bugs might remain, so be careful.
